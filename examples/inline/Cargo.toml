[package]
name = "inline"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ratatui = { version = "0.23.0", default-features = false }
wasm-bindgen = "0.2.87"
js-sys = "0.3.64"
ratatui-wasm = { path = "../.." }
xterm-js-rs = { version = "0.1.2", features = ["xterm-addon-fit"] }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7" }
tokio = { version = "1.32.0", default-features = false, features = [
    "sync",
    "macros",
] }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
web-sys = { version = "0.3.64", features = ["console", "Window", "Document"] }
wasm-bindgen-futures = "0.4.37"
rand = "0.8.5"
getrandom = { version = "0.2.10", features = ["js"] }
crossterm-wasm = { path = "../../../crossterm" }
futures = "0.3.28"

[dev-dependencies]
wasm-bindgen-test = "0.3.12"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
